Essential PH-1 (mata) FAQ
=================================================

* You want fastboot up and running. Don't even attempt any of this if you don't.
* Back to stock thread on xda: https://forum.xda-developers.com/essential-phone/development/stock-7-1-1-nmj20d-t3701681
* If your fingerprint reader stopped working, chances are you have a firmware mismatch. Typically checking your build.prop for the build version and flashing the matching firmware package will fix this. Firmware packages here: https://mega.nz/#F!oK5yWL4L!QDDxwvhePaJZ9hjdZcDvYA
* Bootloader can be unlocked via ``fastboot flashing unlock`` THIS WILL WIPE YOUR DATA
* You probably want to ``fastboot flashing unlock_critical`` while you're at it. This allows updating firmware partitions through fastboot.
* The boot partitions on this device (boot_a and boot_b) are not your "traditional" boot partitions. On these, they contain a kernel and ramdisk like you're probably used to, but in this case the ramdisk is actually your recovery. The device uses a "system-as-root" layout where the system partition actually contains what would have been in your ramdisk.
* In addition to the "system-as-root" layout, we also have the new A/B partition scheme (as first seen on the Pixel/Pixel XL). This can be quite confusing to users as there are actually two copies of many of the partitions. The idea of "slots" comes in to play to determine which set of partitions you are booting. In our case we have an "a" slot and a "b" slot. To determine which slot you are currently booting, you can issue this command via adb: ``adb shell getprop ro.boot.slot_suffix`` or via fastboot: ``fastboot getvar current-slot``. This slot can be changed via fastboot: ``fastboot set_active [a,b]`` or swapped to the non-current slot via: ``fastboot set_active other``. The whole idea behind this is to allow for seamless system upgrades. Android can update the non-current slot while booted, then tell the system to boot to the other slot once the update successfully completes. This does a couple things for us: prevents the user from staring at a boot animation forever, since we can dexopt before reboot. It also prevents creating a non-booting system caused by a flash failure because if it fails the target partition won't be marked as bootable and therefore a reboot would keep the user on the current, working, slot.
* LineageOS builds by invisiblek can be found here: https://updater.invisiblek.org/mata  More info and instructions here: https://goo.gl/hZKdTH
* TWRP can be downloaded from here: https://goo.gl/BRpaci  Flash it to the `boot` partition with fastboot.
* If you move data between devices or change encryption and after restoring data from a twrp backup, you end up without a working fingerprint reader, delete ``/data/system/users/0/fpdata`` and ``/data/system/users/0/settings_fingerprint.xml`` then you should be able to re-enroll fingerprints
* The most common issue you'll run in to when backing up and restoring is a failed boot upon restoring. This is usually caused by the fact that you had to flash TWRP in order to get in to TWRP, therefore when you did your backup, it actually backed up the TWRP install instead of your ROM's boot.img and the kernel included with TWRP isn't capable of booting your rom. To mitigate this, I'd recommend swapping slots BEFORE flashing and booting into TWRP, so that you're on your non-booting slot ``fastboot set_active other`` will switch slots for you. Then, when you get to TWRP, go to the reboot menu, change to the other slot, then perform your backup. This will ensure that it backs up your ROM properly.
* Make sure you always decrypt your data in TWRP before backing up. It's unlikely backing up the encrypted FDE data is viable to restore. TWRP has an option to encrypt the data that is backed up, so if you typically wear a tinfoil hat, you should check that box when you back up.
* If you get an error about ``ExtractTarFork()`` its possible (probable?) you have a problem with crypto. It's likely that what is currently on your device is different or unhappy with how things were backed up. The best way I've found to fix this is to peform a data wipe in fastboot via ``fastboot -w``, then boot into your ROM (with clean data), go through the setup wizard and set a lockscreen password/pin (preferably matching what you had before), then reboot into twrp and restore data.
* Firmware between N and O are very finnicky when it comes to crypto. I'm not even sure I've even wrapped my head around all the ins and outs of O crypto yet. If you're backing up/restoring with O firmware, as of the time this was written (2017-11-22) you're on your own.
* Flashing magisk after a rom is a bit of a problem. The official magisk zip ends up installing it to the currently booted slot. Typically though, you'd want to be installing it to the other slot after flashing a ROM zip, since that's where the rom has been installed. I've made a hacked magisk zip that forces the flash to go to the opposite slot that you are booted to in order to alleviate this headache: https://download.invisiblek.org/magisk_14.3_invisiblekhax.zip Flash this after flashing your rom while you're still in TWRP.
